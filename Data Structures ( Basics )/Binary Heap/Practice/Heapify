#include<bits/stdc++.h>

using namespace std;

class MinHeap
{
    int size,capacity;
    int arr[11]={40,20,30,35,25,80,32,100,70,60};
    public:
    MinHeap()
    {
        capacity=11;
        
        size=10;
        
    }
    int left(int i) { return 2*i+1; }
    int right(int i) {return 2*i+2;}
    int parent(int i) {return (i-1)/2;}
    
    void print()
    {
        cout<<endl;
        for(int i=0;i<capacity-1;i++)
        {
            cout<<arr[i]<<"\t";
        }
    }
    
    void heapify(int i)
    {
        int lt=left(i);
        int rt=right(i);
        int smallest=i;
        if(lt<size&&arr[lt]<arr[i])
        {
            smallest=lt;
        }
        if(rt<size&&arr[rt]<arr[i]&&arr[smallest]>arr[rt])
        {
            smallest=rt;
        }
        if(smallest!=i)
        {
            swap(arr[i],arr[smallest]);
            heapify(smallest);
        }
        
        
        
    }
    
};

int main()
{
    MinHeap h;
    
    h.print();
    h.heapify(0);
    h.print();
    return 0;
}
