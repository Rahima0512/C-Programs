#include<bits/stdc++.h>

using namespace std;

class Heap
{
    int size,capacity;
    int arr[9]={1,2,3,4,5,6,7,8,9};
    public:
    Heap()
    {
        capacity=11;
        
        size=sizeof(arr)/sizeof(arr[0]);
        
    }
    int left(int i) { return 2*i+1; }
    int right(int i) {return 2*i+2;}
    int parent(int i) {return (i-1)/2;}
    
    
    
    
    void print()
    {
        cout<<endl;
        for(int i=0;i<size;i++)
        {
            cout<<arr[i]<<"\t";
        }
    }
    
    void decrease_key(int index,int x) 
    { 
        arr[index]=x;
        
        while(index!=0&&arr[index]<arr[parent(index)])
        {
            swap(arr[index],arr[parent(index)]);
            index=parent(index);
        }
        
    }
};

int main()
{
    Heap h;
    h.print();
    h.decrease_key(8,0);
    h.print();
    return 0;
}
