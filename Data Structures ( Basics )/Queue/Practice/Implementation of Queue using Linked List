#include <bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    node *next;
    node(int x)
    {
        data=x;
        next=nullptr;
        
    }
};
struct My_Queue
{
    node *front,*rear;
    int sz;
    My_Queue()
    {
       front=nullptr;
       rear=nullptr;
       sz=0;
    }
    int size()
    {
        return sz;
        
    }
    int get_front()
    {
        
    }
    int get_rear()
    {
        
    }
    bool isEmpty()
    {
        if(front==nullptr)
        {
            return true;
        }
        else
        {
            return false;
        }
        
    }
    void enqueue(int x)
    {
        node *temp;
        temp=new node(x);
        if(isEmpty())
        {
            front=temp;
            rear=temp;
        }
        else
        {
            rear->next=temp;
            rear=rear->next;
            
        }
    }
    void dequeue()
    {
        if(isEmpty())
        {
            return;
            
        }
            
        else
        {
            node *temp=front;
            front=front->next;
            delete temp;
            
        }
        
    }
    void display()
    {
        node *curr=front;
        cout<<endl;
        while(curr->next!=nullptr)
        {
            cout<<curr->data<<"\t";
            curr=curr->next;
        }
        cout<<endl;
        
    }
};

int main()
{
    My_Queue q;
    q.enqueue(0);
    q.enqueue(1);
    q.enqueue(2);
    q.enqueue(3);
    q.display();
    q.dequeue();
    q.display();
    cout<<endl;
    q.enqueue(4);
    q.display();
    
    return 0;
}
