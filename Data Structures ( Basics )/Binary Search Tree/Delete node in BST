#include <bits/stdc++.h>
using namespace std;

struct Node  
{ 
  int key; 
  struct Node *left; 
  struct Node *right; 
  Node(int k)
  {
      key=k;
      left=right=NULL;
  }
};

Node *InOrderSucc(Node *root)
{
    Node *curr=root;
    while(curr->left!=nullptr)
    {
        curr=curr->left;
    }
    return curr;
}

Node *del(Node *root,int x)
{
    //Our root is nullptr
    if(root==nullptr)
    {
        return root;
    }
    else if(root->key>x)
    {
        root->left=del(root->left,x);
    }
    else if(root->key<x)
    {
        root->right=del(root->right,x);
    }
    else
    {
        if(root->left==nullptr)
        {
            Node *temp=root->right;
            free(root);
            return temp;
            
        }
        else if(root->right==nullptr)
        {
            Node *temp=root->left;
            free(root);
            return temp;
            
        }
        //Case 3                            //Both child present
        Node *temp=InOrderSucc(root->right);
        root->key=temp->key;
        root->right=del(root->right,temp->key);
    }
    return root;
}

void print(Node *root)
{
    if(root!=nullptr)
    {
        
        print(root->left);
        cout<<root->key<<"\t";
        print(root->right);
    }
}

int main() {
	
	Node *root=new Node(15);
	root->left=new Node(5);
	root->left->left=new Node(3);
	root->right=new Node(20);
	root->right->left=new Node(18);
	root->right->left->left=new Node(16);
	root->right->right=new Node(80);
	int x=16;
	
	print(root);
	cout<<endl;
	
	root=del(root,x);
	print(root);
	cout<<endl;
}
