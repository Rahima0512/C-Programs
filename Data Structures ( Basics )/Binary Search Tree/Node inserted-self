#include <bits/stdc++.h>
using namespace std;

struct Node  
{ 
  int key; 
  struct Node *left; 
  struct Node *right; 
  Node(int k)
  {
      key=k;
      left=right=NULL;
  }
};

bool search(Node *root, int x)
{
    
    while(root!=nullptr)
    {
        if(root->key==x)
        {
            return true;
        }
        else if(x>root->key)
        {
            root=root->right;
        }
        else
        {
            root=root->left;
        }
        
    }
    return false;
    
} 

Node *insert(Node *root,int x)
{
    static Node *curr=root;
    Node *ptr=new Node(x);
    if(root==nullptr)
    {
        root=ptr;
        
        return ptr;
        
    }
    else if(x<root->key)
    {
        if(root->left==nullptr)
        {
            root->left=ptr;
            return curr;
        }
        insert(root->left,x);
    }
    else if(x>root->key)
    {
        if(root->right==nullptr)
        {
            root->right=ptr;
            return curr;
        }
        insert(root->right,x);
    }
    
}

void print(Node *root)
{
    if(root!=nullptr)
    {
        
        print(root->left);
        cout<<root->key<<"\t";
        print(root->right);
    }
}

int main() {
	
	Node *root=new Node(15);
	root->left=new Node(5);
	root->left->left=new Node(3);
	root->right=new Node(20);
	root->right->left=new Node(18);
	root->right->left->left=new Node(16);
	root->right->right=new Node(80);
	int x=17;
	
	if(search(root,17))
	{
	    print(root);
	}
	else
	{
	    root=insert(root,17);
	    print(root);
	}
}
